---
import Product from "../../components/Product.astro";
import Layout from "../../layouts/Layout.astro";
/* import products from "../../products.json"; */
import allproducts from "../../all_products.json";

const _products = allproducts.map((x) => {
  return {
    code: x.Name.replaceAll(".", "")
      .replaceAll(" ", "_")
      .replaceAll('"', "")
      .replaceAll("/", ""),
    title: x.Name,
    imageUrl: x.Images.split(",")[0].trim(),
    price: Number(x["Regular price"]) || 0,
    tag: x.Tags.split(",")[0].trim(),
    desc: x["Short description"],
  };
});

interface TProduct {
  title: string;
  price: number;
  imageUrl: string;
  desc: string;
  code: string;
  tag: string;
}

const productsByCode = _products.reduce<Record<string, TProduct>>(
  (byCode, product) => {
    byCode[product.code] = product;

    return byCode;
  },
  {}
);

const product = productsByCode[Astro.params.code || ""];

export function getStaticPaths() {
  const _products = allproducts.map((x) => {
    return {
      code: x.Name.replaceAll(".", "")
        .replaceAll(" ", "_")
        .replaceAll('"', "")
        .replaceAll("/", ""),
      title: x.Name,
      imageUrl: x.Images.split(",")[0].trim(),
      price: Number(x["Regular price"]) || 0,
      tag: x.Tags.split(",")[0].trim(),
      desc: x["Short description"],
    };
  });

  return _products.map((x) => ({ params: { code: x.code } }));
}
---

<Layout>
  <Product
    code={product.code}
    tag={product.tag}
    desc={product.desc}
    title={product.title}
    imageUrl={product.imageUrl}
    price={product.price}
  />
</Layout>
